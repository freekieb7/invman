# proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;
# limit_req_zone $binary_remote_addr zone=ip:10m rate=5r/s;

upstream app_upstream {
  server ${APP_DOMAIN_INTERNAL}:${APP_PORT_INTERNAL};
}

upstream api_upstream {
  server ${API_DOMAIN_INTERNAL}:${API_PORT_INTERNAL};
}

upstream auth_upstream {
  server ${AUTH_DOMAIN_INTERNAL}:${AUTH_PORT_INTERNAL};
}

upstream monitor_upstream {
  server ${MONITOR_DOMAIN_INTERNAL}:${MONITOR_PORT_INTERNAL};
}

server {
    listen 80;
    listen [::]:80;

    server_name ${DOMAIN};

    location /nginx_status {
        stub_status;
    }

    location / {
        return 302 http://${APP_DOMAIN}$request_uri;
    }
}

server {
    listen 80;
    listen [::]:80;

    server_name *.${DOMAIN};

    return 302 https://$server_name$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  include     ssl/ssl-params.conf;

  server_name ${APP_DOMAIN};

  # gzip on;
  # gzip_proxied any;
  # gzip_comp_level 4;
  # gzip_types text/css application/javascript image/svg+xml;

  # proxy_http_version 1.1;
  # proxy_set_header Upgrade $http_upgrade;
  # proxy_set_header Connection 'upgrade';
  # proxy_set_header Host $host;
  # proxy_cache_bypass $http_upgrade;

  # location /_next/static {
    # proxy_cache STATIC;
    # proxy_pass http://next-js_upstream;

    # # For testing cache - remove before deploying to production
    # add_header X-Cache-Status $upstream_cache_status;
  # }

  # location /static {
    # proxy_cache STATIC;
    # proxy_ignore_headers Cache-Control;
    # proxy_cache_valid 60m;
    # proxy_pass http://next-js_upstream;

    # # For testing cache - remove before deploying to production
    # add_header X-Cache-Status $upstream_cache_status;
  # }

  location / {
    # limit_req zone=ip burst=12 delay=8;
    proxy_pass http://app_upstream;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name ${AUTH_DOMAIN};

  include     ssl/ssl-params.conf;

  location / {
    proxy_pass http://auth_upstream;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name ${API_DOMAIN};

  include     ssl/ssl-params.conf;

  location / {
    proxy_pass http://api_upstream;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name ${MONITOR_DOMAIN};

  include     ssl/ssl-params.conf;

  location / {
    proxy_pass http://monitor_upstream;
  }
}