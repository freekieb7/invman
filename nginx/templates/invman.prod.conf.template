limit_req_zone $binary_remote_addr zone=ip:10m rate=5r/s;

upstream app_upstream {
  server ${APP_DOMAIN_INTERNAL}:${APP_PORT_INTERNAL};
}

upstream api_upstream {
  server ${API_DOMAIN_INTERNAL}:${API_PORT_INTERNAL};
}

upstream auth_upstream {
  server ${AUTH_DOMAIN_INTERNAL}:${AUTH_PORT_INTERNAL};
}

upstream chat_upstream {
  server ${CHAT_DOMAIN_INTERNAL}:${CHAT_PORT_INTERNAL};
}

upstream monitor_upstream {
  server ${MONITOR_DOMAIN_INTERNAL}:${MONITOR_PORT_INTERNAL};
}

server {
    listen 80 default_server;
    listen [::]:80;

    server_name ${DOMAIN};

    limit_req zone=ip burst=10 nodelay;

    location /nginx_status {
        allow 127.0.0.1;
        deny all;

        stub_status;
    }

    location / {
        return 301 https://${APP_DOMAIN}$request_uri;
    }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name ${APP_DOMAIN};

  include     ssl/ssl-params.conf;

  limit_req zone=ip burst=10 nodelay;

  location / {
    proxy_pass http://app_upstream;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name ${AUTH_DOMAIN};

  include     ssl/ssl-params.conf;

  limit_req zone=ip burst=10 nodelay;

  location / {
    proxy_pass http://auth_upstream;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name ${API_DOMAIN};

  include     ssl/ssl-params.conf;

  limit_req zone=ip burst=10 nodelay;

  location / {
    proxy_pass http://api_upstream;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name ${CHAT_DOMAIN};

  include     ssl/ssl-params.conf;

  location / {
    proxy_pass http://chat_upstream;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name ${MONITOR_DOMAIN};

  include     ssl/ssl-params.conf;

  proxy_set_header Host $http_host;

  location / {
    proxy_pass http://monitor_upstream;
  }
}