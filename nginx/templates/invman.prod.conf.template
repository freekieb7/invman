proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;
# limit_req_zone $binary_remote_addr zone=ip:10m rate=5r/s;

upstream next-js_upstream {
  server next-js:3000;
}

server {
    listen 80 default_server;
    listen [::]:80;

    server_name invman.nl;

    return 302 https://app.$server_name$request_uri;
}

server {
    listen 80;
    listen [::]:80;

    server_name *.invman.nl;

    return 302 https://$server_name$request_uri;
}

server {
  listen 443 ssl default_server;
  listen [::]:443 ssl;

  include     ssl/ssl-params.conf;

  server_name ${NGINX_INVMAN_APP_HOST};

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_types text/css application/javascript image/svg+xml;

  proxy_http_version 1.1;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_cache_bypass $http_upgrade;

  location /_next/static {
    proxy_cache STATIC;
    proxy_pass http://next-js_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location /static {
    proxy_cache STATIC;
    proxy_ignore_headers Cache-Control;
    proxy_cache_valid 60m;
    proxy_pass http://next-js_upstream;

    # For testing cache - remove before deploying to production
    add_header X-Cache-Status $upstream_cache_status;
  }

  location / {
    # limit_req zone=ip burst=12 delay=8;
    proxy_pass http://next-js_upstream;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name ${NGINX_INVMAN_API_HOST};

  location / {
    proxy_pass http://graphql:8080;
  }
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name ${NGINX_INVMAN_AUTH_HOST};

  location / {
    proxy_pass http://auth-app:8080;
  }
}