package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.37

import (
	"context"
	"invman/api/pkg/app/database/entity"
	gql "invman/api/pkg/gqlgen/model"

	"github.com/google/uuid"
)

// UpdateActiveModules is the resolver for the updateActiveModules field.
func (r *mutationResolver) UpdateActiveModules(ctx context.Context, input gql.UpdateActiveModulesInput) (bool, error) {
	settings, err := r.SettingsRepository.Get()

	if err != nil {
		return false, err
	}

	if err := r.SettingsRepository.Update(settings); err != nil {
		return false, err
	}

	return true, err
}

// AddTextCustomFieldToItems is the resolver for the addTextCustomFieldToItems field.
func (r *mutationResolver) AddTextCustomFieldToItems(ctx context.Context, input gql.TextCustomFieldInput) (bool, error) {
	settings, err := r.SettingsRepository.Get()

	if err != nil {
		return false, err
	}

	customFieldId := uuid.NewString()
	settings.ItemsGlobalCustomFields.V[customFieldId] = &entity.GlobalTextCustomField{
		CustomField: entity.CustomField{
			ID: customFieldId,
			Translations: entity.Translations{
				Default: input.Field.Name,
			},
			Type: "TextCustomField",
		},
		OnEmptyValue: input.OnEmptyValue,
	}

	if err := r.SettingsRepository.Update(settings); err != nil {
		return false, err
	}

	return true, nil
}
