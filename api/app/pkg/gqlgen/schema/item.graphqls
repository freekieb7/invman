type Item {
  id: ID!
  group: ItemGroup
  attributes: ItemAttributes
  createdAt: DateTime!
  updatedAt: DateTime
}

type ItemAttributes {
  specific: ItemAttributeSpecific!
  general: ItemAttributeGeneral!
}

type ItemAttributeSpecific {
  fields: [CustomField!]
}

type ItemAttributeGeneral {
  fields: [CustomField!]
}

input ItemsInput {
  limit: Int!
  offset: Int
}

input CreateItemInput {
  groupID: ID
  attributes: ItemAttributesInput
}

input ItemAttributesInput {
  specific: ItemAttributeSpecificInput
  general: ItemAttributeGeneralInput
}

input ItemAttributeSpecificInput {
  fields: [CustomFieldInput!]
}

input ItemAttributeGeneralInput {
  fields: [CustomFieldInput!]
}

extend type Query {
  item(id: ID!): Item
  items(limit: Int, offset: Int): [Item!]!
}

extend type Mutation {
  createItem(input: CreateItemInput!): Item!
  deleteItem(id: ID!): Boolean!
}