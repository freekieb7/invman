enum ItemsFilterSubject {
  group
}

type Item {
  id: ID!
  pid: String!
  group: ItemGroup
  localFields: [LocalField!]
  globalFieldValues: [GlobalFieldValue!]
  createdAt: DateTime!
  updatedAt: DateTime
}

input ItemsFilter {
  subject: ItemsFilterSubject!
  operator: FilterOperator!
  value: String
}

input CreateItemInput {
  pid: String!
  groupId: ID
  localFields: [LocalFieldInput!]
  globalFieldValues: [GlobalFieldValueInput!]
}

extend type Query {
  item(id: ID!): Item
  items(limit: Int!, offset: Int, filters: [ItemsFilter!]): [Item!]!
}

extend type Mutation {
  createItem(input: CreateItemInput!): Item!
  deleteItem(id: ID!): Boolean!
}