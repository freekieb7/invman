enum ItemGroupsFilterSubject {
  name
}

type ItemGroup {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime
}

input ItemGroupsFilter {
  subject: ItemGroupsFilterSubject!
  operator: FilterOperator!
  value: String
}

input CreateItemGroupInput {
  name: String!
}

extend type Query {
  itemGroup(id: ID!): ItemGroup
  itemGroups(limit: Int!, offset: Int, filters: [ItemGroupsFilter!]): [ItemGroup!]!
}

extend type Mutation {
  createItemGroup(input: CreateItemGroupInput!): ItemGroup
  deleteItemGroup(id: ID!): Boolean!
}