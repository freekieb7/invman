package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"
	"invman/api/internal/pkg/gqlgen/generated"
	"invman/api/internal/pkg/gqlgen/model"
)

// CreateService is the resolver for the createService field.
func (r *mutationResolver) CreateService(ctx context.Context, input model.CreateServiceInput) (*model.Service, error) {
	panic(fmt.Errorf("not implemented: CreateService - createService"))
}

// UpdateService is the resolver for the updateService field.
func (r *mutationResolver) UpdateService(ctx context.Context, input model.UpdateServiceInput) (*model.Service, error) {
	panic(fmt.Errorf("not implemented: UpdateService - updateService"))
}

// DeleteService is the resolver for the deleteService field.
func (r *mutationResolver) DeleteService(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteService - deleteService"))
}

// Service is the resolver for the service field.
func (r *queryResolver) Service(ctx context.Context, id string) (*model.Service, error) {
	panic(fmt.Errorf("not implemented: Service - service"))
}

// Services is the resolver for the services field.
func (r *queryResolver) Services(ctx context.Context, input model.ServicesInput) ([]*model.Service, error) {
	panic(fmt.Errorf("not implemented: Services - services"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
