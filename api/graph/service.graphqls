type Service {
  uuid: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input CreateServiceInput {
  name: String!
}

input UpdateServiceInput {
  uuid: String!
  name: String!
}

input ServicesInput {
  limit: Int!
  offset: Int
  uuid: TextFilter
  name: TextFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  order: ServicesOrder
}

enum ServicesOrderSubject {
  uuid
  name
  createdAt
  updatedAt
}

input ServicesOrder {
  subject: ServicesOrderSubject!
  order: OrderDirection!
}

type Query {
  service(uuid: String!): Service
  services(input: ServicesInput!): [Service!]
}

type Mutation {
  createService(input: CreateServiceInput!): Service
  updateService(input: UpdateServiceInput!): Service
  deleteService(uuid: String!): Boolean!
}
